// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum user_status {
  pending
  active
  inactive
  blocked
}

enum level_status {
  Silver
  Gold
  Platinum
  Diamond
}

model Order {
  id     Int      @id @default(autoincrement())
  user_id      Int
  total_amount Decimal  @db.Decimal(15, 2)
  status       String   @default("pending")
  created_at   DateTime @default(now())

  user         User     @relation(fields: [user_id], references: [id])

  @@map("orders")
}

model Transaction {
  id          Int      @id @default(autoincrement())
  user_id     Int
  amount      Decimal  @db.Decimal(15, 2)
  type        String   
  status      String   @default("pending") 
  reference_id Int?    
  description String?  
  created_at  DateTime @default(now())

  user        User     @relation(fields: [user_id], references: [id])

  @@map("transactions")
}


model User {
  id       Int         @id @default(autoincrement())
  username      String      @unique @db.VarChar(255)
  email         String      @unique @db.VarChar(255)
  password_hash String      @db.VarChar(255)
  full_name     String?     @db.VarChar(255)
  phone         String?     @db.VarChar(255)
  balance       Decimal?    @default(0) @db.Decimal(15, 2)
  referral_code String?     @unique @db.VarChar(255)
  status        user_status @default(pending)
  level         level_status @default(Silver)
  created_at    DateTime    @default(now())
  updated_at    DateTime    @default(now()) @updatedAt
  is_deleted    Boolean     @default(false)

  orders       Order[]
  transactions Transaction[]

  @@map("users")
}